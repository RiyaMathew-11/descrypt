Question_No,Question,Model_Answer
1,What does static variable mean?,Static variables are the variables which retain their values between the function calls. They are initialized only once their scope is within the function in which they are defined.
2,What is a pointer?,"Pointers are variables which stores the address of another variable. That variable may be a scalar (including another pointer), or an aggregate (array or structure). The pointed-to object may be part of a larger object, such as a field of a structure or an element in an array."
3,What are the uses of a pointer?,"Pointer is used in the following cases i) It is used to access array elements ii) It is used for dynamic memory allocation. iii) It is used in Call by reference iv) It is used in data structures like trees, graph, linked list etc."
4,What is a structure?,Structure constitutes a super data type which represents several different data types in a single unit. A structure can be initialized if it is static or global.
5,What is a union?,Union is a collection of heterogeneous data type but it uses efficient memory utilization technique by allocating enough memory to hold the largest member. Here a single area of memory contains values of different types at different time. A union can never be initialized.
6,What are the differences between structures and union?,"A structure variable contains each of the named members, and its size is large enough to hold all the members. Structure elements are of same size. A union contains one of the named members at a given time and is large enough to hold the largest member. Union element can be of different sizes."
7,What are the differences between structures and arrays?,Structure is a collection of heterogeneous data type but array is a collection of homogeneous data types. Array 1-It is a collection of data items of same data type. 2-It has declaration only 3-.There is no keyword. 4- array name represent the address of the starting element. Structure 1-It is a collection of data items of different data type. 2- It has declaration and definition 3- keyword struct is used 4-Structure name is known as tag it is the short hand notation of the declaration.
8,In header files whether functions are declared or defined?,"Functions are declared within header file. That is function prototypes exist in a header file,not function bodies. They are defined in library (lib)."
9,What are the differences between malloc () and calloc ()?,"Malloc Calloc 1-Malloc takes one argument Malloc(a);where a number of bytes 2-memory allocated contains garbage values 1-Calloc takes two arguments Calloc(b,c) where b no of object and c size of object www.cpp-progams.blogspot.com Page 6 2-It initializes the contains of block of memory to zerosMalloc takes one argument, memory allocated contains garbage values. It allocates contiguous memory locations. Calloc takes two arguments, memory allocated contains all zeros, and the memory allocated is not contiguous."
10,What are macros? What are its advantages and disadvantages?,Macros are abbreviations for lengthy and frequently used statements. When a macro is called the entire code is substituted by a single line though the macro definition is of several lines. The advantage of macro is that it reduces the time taken for control transfer as in case of function. The disadvantage of it is here the entire code is substituted so the program becomes lengthy if a macro is called several times.
11,Difference between pass by reference and pass by,Pass by reference passes a pointer to the value. This allows the callee to modify the variable directly.Pass by value gives a copy of the value to the callee. This allows the callee to modify the value without modifying the variable.
12,What is static identifier?,"A file-scope variable that is declared static is visible only to functions within that file. A function-scope or block-scope variable that is declared as static is visible only within that scope. Furthermore, static variables only have a single instance. In the case of function- or block-scope variables, this means that the variable is not ―automatic‖ and thus retains its value across function invocations."
13,Where is the auto variables stored?,"Auto variables can be stored anywhere, so long as recursion works. Practically, they‘re stored on the stack. It is not necessary that always a stack exist. You could theoretically allocate function invocation records from the heap."
14,"Where does global, static, and local, register","Global: Wherever the linker puts them. Typically the ―BSS segment‖ on many platforms. Static: Again, wherever the linker puts them. Often, they‘re intermixed with the globals. The only difference between globals and statics is whether the linker will resolve the symbols across compilation units.Local: Typically on the stack, unless the variable gets register allocated and never spills.Register: Nowadays, these are equivalent to ―Local‖ variables. They live on the stack unless they get register-allocated."
15,. Difference between arrays and linked list?,"An array is a repeated pattern of variables in contiguous storage. A linked list is a set of structures scattered through memory, held together by pointers in each element that point to the next element. With an array, we can (on most architectures) move from one element to the next by adding a fixed constant to the integer value of the pointer. With a linked list, there is a ―next‖ pointer in each structure which says what element comes next."
16,What are enumerations?,"They are a list of named integer-valued constants. Example:enum color { black , orange=4, www.cpp-progams.blogspot.com Page 7 yellow, green, blue, violet };This declaration defines the symbols ―black‖, ―orange‖, ―yellow‖, etc. to have the values ―1,‖ ―4,‖ ―5,‖ … etc. The difference between an enumeration and a macro is that the enum actually declares a type, and therefore can be type checked."
17,Describe about storage allocation and scope of,"Globals have application-scope. They‘re available in any compilation unit that includes an appropriate declaration (usually brought from a header file). They‘re stored wherever the linker puts them, usually a place called the ―BSS segment.‖ Extern? This is essentially ―global.‖ Static: Stored the same place as globals, typically, but only available to the compilation unit that contains them. If they are block-scope global, only available within that block and its subblocks. Local: Stored on the stack, typically. Only available in that block and its subblocks. (Although pointers to locals can be passed to functions invoked from within a scope where that local is valid.) Register: See tirade above on ―local‖ vs. ―register.‖ The only difference is that the C compiler will not let you take the address of something you‘ve declared as ―register.‖"
18,What are register variables? What are the advantages,"If a variable is declared with a register storage class,it is known as register variable.The register variable is stored in the cpu register instead of main memory.Frequently used variables are declared as register variable as it‘s access time is faster."
19,What is the use of typedef?,The typedef help in easier modification when the programs are ported to another machine. A descriptive new name given to the existing data type may be easier to understand the code.
20,Can we specify variable field width in a scanf(),"All field widths are variable with scanf(). You can specify a maximum field width for a given field by placing an integer value between the ‗%‘ and the field type specifier. (e.g. %64s). Such a specifier will still accept a narrower field width. The one exception is %#c (where # is an integer). This reads EXACTLY # characters, and it is the only way to specify a fixed field width with scanf()."
21,Out of fgets() and gets() which function is safe to use and why?,"fgets() is safer than gets(), because we can specify a maximum input length. Neither one is
completely safe, because the compiler can‘t prove that programmer won‘t overflow the buffer he
pass to fgets ()."
22,Difference between strdup and strcpy?,"Both copy a string. strcpy wants a buffer to copy into. strdup allocates a buffer using malloc(). Unlike strcpy(), strdup() is not specified by ANSI ."
23,What is recursion?,A recursion function is one which calls itself either directly or indirectly it must halt at a definite point to avoid infinite recursion.
24,Differentiate between a for loop and a while loop? What are it uses?,For executing a set of statements fixed number of times we use for loop while when the number of www.cpp-progams.blogspot.com Page 8 iterations to be performed is not known in advance we use while loop.
25,What is storage class.What are the different storage classes in C?,"Storage class is an attribute that changes the behavior of a variable. It controls the lifetime, scope and linkage. The storage classes in c are auto, register, and extern, static, typedef."
26,What the advantages of using Unions?,When the C compiler is allocating memory for unions it will always reserve enough room for the largest member. 27. What is the d
27,What is the difference between Strings and Arrays?,String is a sequence of characters ending with NULL .it can be treated as a one dimensional array of characters terminated by a NULL character.
28,What is a far pointer? where we use it?,": In large data model (compact, large, huge) the address B0008000 is acceptable because in these model all pointers to data are 32bits long. If we use small data model(tiny, small, medium) the above address won‘t work since in these model each pointer is 16bits long. If we are working in a small data model and want to access the address B0008000 then we use far pointer. Far pointer is always treated as a 32bit pointer and contains a segment address and offset address both of 16bits each. Thus the address is represented using segment : offset format B000h:8000h. For any given memory address there are many possible far address segment : offset pair. The segment register contains the address where the segment begins and offset register contains the offset of data/code from where segment begins."
28,What is a huge pointer?,Huge pointer is 32bit long containing segment address and offset address. Huge pointers are normalized pointers so for any given memory address there is only one possible huge address segment: offset pair. Huge pointer arithmetic is doe with calls to special subroutines so its arithmetic slower than any other pointers.
30,"What is a normalized pointer ,how do we normalize a pointer?","It is a 32bit pointer, which has as much of its value in the segment register as possible. Since a segment can start every 16bytes so the offset will have a value from 0 to F. for normalization convert the address into 20bit address then use the 16bit for segment address and 4bit for the offset address. Given a pointer 500D: 9407,we convert it to a 20bitabsolute address 549D7,Which then normalized to 549D:0007."
31,What is near pointer.,"A near pointer is 16 bits long. It uses the current content of the CS (code segment) register (if the pointer is pointing to code) or current contents of DS (data segment) register (if the pointer is pointing to data) for the segment part, the offset part is stored in a 16 bit near pointer. Using near
pointer limits the data/code to 64kb segment."
32,"In C, why is the void pointer useful? When would you use it?",The void pointer is useful because it is a generic pointer that any pointer can be cast into and back again without loss of information.
33,What is a NULL Pointer? Whether it is same as an uninitialized pointer?,Null pointer is a pointer which points to nothing but uninitialized pointer may point to anywhere
34,Are pointers integer ?,"No, pointers are not integers. A pointer is an address. It is a positive number"
35,What does the error ‘Null Pointer Assignment’ means and what causes this error?,As null pointer points to nothing so accessing a uninitialized pointer or invalid location may cause an error.
36,What is generic pointer in C?,"In C void* acts as a generic pointer. When other pointer types are assigned to generic pointer, conversions are applied automatically (implicit conversion)."
37,Are the expressions arr and &arr same for an array of integers?,Yes for array of integers they are same.
38,How pointer variables are initialized ?,Pointer variables are initialized by one of the following ways. I. Static memory allocation II. Dynamic memory allocation
39,What is static memory allocation ?,"Compiler allocates memory space for a declared variable. By using the address of operator, the reserved address is obtained and this address is assigned to a pointer variable. This way of assigning pointer value to a pointer variable at compilation time is known as static memory allocation."
40,What is dynamic memory allocation?,"A dynamic memory allocation uses functions such as malloc() or calloc() to get memory dynamically. If these functions are used to get memory dynamically and the values returned by these function are assigned to pointer variables, such a way of allocating memory at run time is known as dynamic memory allocation."
41,. What is the purpose of realloc ?," It increases or decreases the size of dynamically allocated array. The function realloc (ptr,n) uses two arguments. The first argument ptr is a pointer to a block of memory for which the size is to be altered. The second argument specifies the new size. The size may be increased or decreased. If sufficient space is not available to the old region the function may create a new region."
42,What is pointer to a pointer.,"If a pointer variable points another pointer value. Such a situation is known as a pointer to a pointer. Example: int *p1,**p2,v=10; P1=&v; p2=&p1; Here p2 is a pointer to a pointer."
43,What is an array of pointers ?,"if the elements of an array are addresses, such an array is called an array of pointers."
44,Difference between linker and linkage ?,Linker converts an object code into an executable code by linking together the necessary www.cpp-progams.blogspot.com Page 10 built in functions. The form and place of declaration where the variable is declared in a program determine the linkage of variable.
45,Is it possible to have negative index in an array?,"Yes it is possible to index with negative value provided there are data stored in this location. Even if it is illegal to refer to the elements that are out of array bounds, the compiler will not produce error because C has no check on the bounds of an array"
46,Why is it necessary to give the size of an array in an array declaration ?,"When an array is declared, the compiler allocates a base address and reserves enough space in memory for all the elements of the array. The size is required to allocate the required space and hence size must be mentioned."
47,What modular programming ?,"If a program is large, it is subdivided into a number of smaller programs that are called modules or subprograms. If a complex problem is solved using more modules, this approach is known as modular programming."
48,What is a function ?,A large program is subdivided into a number of smaller programs or subprograms. Each subprogram specifies one or more actions to be performed for the larger program. Such sub programs are called functions.
49,What is an argument ?,An argument is an entity used to pass data from the calling to a called function.